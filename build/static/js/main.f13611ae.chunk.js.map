{"version":3,"sources":["logo.svg","features/Firebase/initFirebase.js","features/HomePage/HomePage.js","features/Session/Session.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","databaseURL","messagingSenderId","appId","measurementId","getDatabase","primary","useStyles","makeStyles","root","color","borderBottomColor","input","linkIcon","display","points","borderColor","pointsGroup","padding","divider","backgroundColor","width","maxWidth","marginTop","marginBottom","margin","users","new","background","join","HomePage","InputProps","classes","useState","setName","setUserId","setNameSubmit","setPoint","setShow","sessionId","setSessionId","sessionExists","setSessionExists","checkSession","dbRef","ref","console","log","get","child","then","snapshot","val","exists","catch","error","to","onClick","event","Math","floor","random","Button","variant","className","autoComplete","TextField","value","onChange","target","helperText","id","label","results","borderWidth","linkButton","Session","name","userId","nameSubmitted","show","window","location","pathname","split","handlePointClick","point","db","info","updates","update","getSession","clearPoints","map","user","updateDB","usersListRef","newUserRef","push","key","set","getCalculations","modeList","totalList","total","submittedPoints","length","userPoint","checkUser","printUsers","printUsersNoShow","onValue","forEach","childSnapshot","childData","printButtons","ButtonGroup","size","el","document","createElement","body","appendChild","select","execCommand","removeChild","copy","onSubmit","App","exact","path","component","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f13611ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyDYYVBK8gldJD66uDYvBiKi0FDgQ4QLSTU\",\n  authDomain: \"problem-pointer.firebaseapp.com\",\n  projectId: \"problem-pointer\",\n  storageBucket: \"problem-pointer.appspot.com\",\n  databaseURL: \"https://problem-pointer-default-rtdb.firebaseio.com/\",\n  messagingSenderId: \"554807281859\",\n  appId: \"1:554807281859:web:e595fa78dcae2141a33a76\",\n  measurementId: \"G-DRHHQ36833\"\n};\n\nconst app = initializeApp(config);\n\nconst db = getDatabase(app);\n\nexport { initializeApp, db, app };\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Divider from '@material-ui/core/Divider';\nimport Session from '../Session/Session';\nimport { initializeApp, db, app } from \"../Firebase/initFirebase.js\";\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { getDatabase, ref, set, child, get, push, onValue, update } from \"firebase/database\";\n\nconst primary = '#6fee86';\n\nconst useStyles = makeStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: primary,\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: primary,\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: primary,\n    },\n    '& label': {\n      color: primary,\n    },\n  },\n  input: {\n    color: primary,\n  },\n  linkIcon: {\n    color: primary,\n    display: 'inline',\n  },\n  points: {\n    color: primary,\n    borderColor: primary,\n  },\n  pointsGroup: {\n    padding: '20px',\n  },\n  divider: {\n    backgroundColor: primary,\n    width: '100%',\n    maxWidth: 500,\n    marginTop: 25,\n    marginBottom: 25,\n    margin: 'auto',\n  },\n  users: {\n    color: primary,\n  },\n  new: {\n    background: primary,\n    width: '18%',\n    marginBottom: 25,\n  },\n  join: {\n    background: primary,\n    width: '9%',\n    marginTop: 20,\n  },\n});\n\nexport function HomePage (InputProps) {\n  const classes = useStyles();\n  const [name, setName] = useState('')\n  const [userId, setUserId] = useState('')\n  const [nameSubmitted, setNameSubmit] = useState(false)\n  const [point, setPoint] = useState('')\n  const [show, setShow] = useState(false)\n  const [users, setUsers] = useState([])\n  const [sessionId, setSessionId] = useState('')\n  const [initialState, setInitial] = useState(true)\n  const [sessionExists, setSessionExists] = useState('')\n\n  function setSession (sessionId) {\n    const db = getDatabase()\n    const dbRef = ref(db, 'sessions/' +sessionId)\n    console.log(\"here\")\n  }\n\n  function checkSession (sessionId) {\n    const dbRef = ref(getDatabase());\n    console.log(sessionId)\n    get(child(dbRef, `sessions/` + sessionId)).then((snapshot) => {\n      console.log(snapshot.val())\n      if (snapshot.exists()) {\n        setSessionExists(true)\n      } else {\n        console.log(\"No data available\");\n        setSessionExists(false)\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n  return (\n    <div>\n      <Link to=\"/\" onClick={event => [setUserId(''), setSessionId(''), setName(''), setPoint(''), setNameSubmit(false), setShow(false)]}>\n        <h1>Problem Pointer</h1>\n      </Link>\n        <div>\n          <Link to={\"/session/\"+(Math.floor(Math.random() * 10000) + 1)}>\n            <Button variant=\"contained\" className={classes.new}>New Session</Button>\n          </Link>\n          <form className={classes.root} autoComplete=\"off\">\n            <TextField InputProps={{className: classes.input}} value={sessionId}\n            onChange={event => [setSessionId(event.target.value), checkSession(event.target.value)]}\n            error={sessionExists === false}\n            helperText={sessionExists === false ? \"This session doesn't exist.\" : ' '}\n            id=\"standard-basic\" label=\"Session ID\"/>\n          </form>\n          {sessionExists &&\n            <Link to={\"/session/\"+sessionId}>\n              <Button variant=\"contained\" className={classes.join} onClick={event => [setSessionId(sessionId)]}>Join Existing</Button>\n            </Link>\n          }\n          {!sessionExists &&\n            <Link to={\"/\"}>\n              <Button variant=\"contained\" className={classes.join}>Join Existing</Button>\n            </Link>\n          }\n        </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport HomePage from '../HomePage/HomePage'\nimport Divider from '@material-ui/core/Divider';\nimport { initializeApp, db, app } from \"../Firebase/initFirebase.js\";\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { getDatabase, ref, set, child, get, push, onValue, update } from \"firebase/database\";\n\nconst primary = '#6fee86';\nvar total = 0;\nvar mean = 0;\n\nconst useStyles = makeStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: primary,\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: primary,\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: primary,\n    },\n    '& label': {\n      color: primary,\n    },\n  },\n  input: {\n    color: primary,\n  },\n  linkIcon: {\n    color: primary,\n    display: 'inline'\n  },\n  points: {\n    color: primary,\n    borderColor: primary,\n  },\n  pointsGroup: {\n    padding: '20px',\n  },\n  divider: {\n    backgroundColor: primary,\n    width: '100%',\n    maxWidth: 500,\n    marginTop: 25,\n    marginBottom: 25,\n    margin: 'auto',\n  },\n  users: {\n    color: primary,\n  },\n  results: {\n    color: primary,\n    borderColor: primary,\n    borderWidth: 1\n  },\n  new: {\n    background: primary,\n    width: '18%',\n    marginBottom: 25,\n  },\n  linkButton: {\n    display: 0,\n  },\n  join: {\n    background: primary,\n    width: '9%',\n    marginTop: 20,\n  },\n});\n\nexport function Session (InputProps) {\n  const classes = useStyles();\n  const [name, setName] = useState('')\n  const [userId, setUserId] = useState('')\n  const [nameSubmitted, setNameSubmit] = useState(false)\n  const [point, setPoint] = useState('')\n  const [show, setShow] = useState(false)\n  const [users, setUsers] = useState([])\n  const [sessionId, setSessionId] = useState(window.location.pathname.split('/')[4])\n  const [initialState, setInitial] = useState(true)\n\n  function handlePointClick (name=name, point='') {\n    const db = getDatabase()\n    const info = {\n      name,\n      point\n    }\n    const updates = {}\n    updates['sessions/' + sessionId + '/' + userId] = info\n\n    update(ref(db), updates)\n    getSession(sessionId)\n  }\n\n  function clearPoints (users) {\n    users.map(user => (\n      handlePointClick(user[0],\"\")\n    ))\n  }\n\n  function updateDB (name, point) {\n    const db = getDatabase()\n    const usersListRef = ref(db, 'sessions/' + sessionId)\n    const newUserRef = push(usersListRef)\n    setUserId(newUserRef.key)\n    set(newUserRef, {\n      name,\n      point\n    })\n  }\n\n  function checkUser(userPoint, total, submittedPoints, modeList) {\n    var submitted = 0\n    if(userPoint === '') {\n      submitted = submittedPoints - 1\n      return [total, submitted, modeList]\n    } else {\n      modeList = modeList[userPoint] + 1\n      return [total + userPoint, submittedPoints, modeList]\n    }\n  }\n\n  function getCalculations(users) {\n    var modeList = [0,0,0,0,0,0,0,0,0]\n    var totalList = []\n    var mode = 0\n    var mean = 0\n    var total = 0\n    var submittedPoints = users.length\n\n    users.map(user => (\n      totalList = checkUser(user[1],total, submittedPoints, modeList),\n      total = totalList[0],\n      submittedPoints = totalList[1],\n      modeList = totalList[2]\n    ))\n    return (\n      <div className={classes.results}>\n        <p>Mean: 4.33</p>\n        <p>Mode: 3</p>\n      </div>\n    )\n  }\n\n  function setSession (sessionId) {\n    const db = getDatabase()\n    const dbRef = ref(db, 'sessions/' +sessionId)\n  }\n\n  function printUsers(users) {\n    return (\n      <div className={classes.users}>\n        {users.map(user => (\n          <p>{user[0]}{user[1]}</p>\n        ))}\n      </div>\n    )\n  }\n\n  function currentUser(userName, userPoint) {\n    if(userName === name) {\n      return (\n        <div>\n          <p>{userName}{userPoint}</p>\n        </div>\n      )\n    } else {\n        return (\n          <div>\n            <p>{userName}</p>\n          </div>\n        )\n    }\n  }\n\n  function printUsersNoShow(users) {\n    return (\n      <div className={classes.users}>\n        {users.map(user => (\n          <p>{user[0]}</p>\n        ))}\n      </div>\n    )\n  }\n\n  function getSession (sessionId) {\n    const db = getDatabase()\n    const dbRef = ref(db, 'sessions/' +sessionId)\n    const users = []\n    onValue(dbRef, (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        const childKey = childSnapshot.key;\n        const childData = childSnapshot.val();\n        users.push([childData.name, childData.point])\n      });\n    });\n    return (\n      <div>\n          {show &&\n            <div>\n              {printUsers(users)}\n              {getCalculations(users)}\n            </div>\n          }\n          {!show &&\n            printUsersNoShow(users)\n          }\n        {printButtons(users)}\n      </div>\n    )\n  }\n\n  function printButtons (users) {\n      return (\n        <div className={classes.pointsGroup}>\n          <ButtonGroup size=\"large\" aria-label=\"large outlined button group\">\n            <Button className={classes.points} onClick={event => handlePointClick(name, 0.5)}>.5</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 1)}>1</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 2)}>2</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 3)}>3</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 5)}>5</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 8)}>8</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 13)}>13</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, 20)}>20</Button>\n            <Button className={classes.points} onClick={event => handlePointClick(name, '?')}>?</Button>\n            {!show &&\n              <Button className={classes.points} onClick={event => setShow(true)}>Show Results</Button>\n            }\n            {show &&\n              <Button className={classes.points} onClick={event => [setShow(false), clearPoints(users)]}>Clear Results</Button>\n            }\n          </ButtonGroup>\n        </div>\n      )\n  }\n\n  function copy () {\n    const el = document.createElement(\"input\");\n    el.value = window.location.pathname;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  }\n\n    return (\n      <div>\n        <Link to=\"/\" onClick={ event => [setUserId(''), setSessionId(''), setName(''), setPoint(''), setShow(false)]}>\n          <h1>Problem Pointer</h1>\n        </Link>\n        <h2 className={classes.linkIcon}>Session - {window.location.pathname.split('/')[4]}</h2>\n        <Button className={classes.linkButton}>\n          <LinkIcon className={classes.linkIcon} onClick={event => copy()}/>\n        </Button>\n        {!nameSubmitted &&\n          <form className={classes.root} autoComplete=\"off\" onSubmit={(event) => [\n            setNameSubmit(true),\n            setSessionId(window.location.pathname.split('/')[4]),\n            updateDB(name,'')]}>\n            <TextField InputProps={{className: classes.input}} value={name} onChange={event => setName(event.target.value)} id=\"standard-basic\" label=\"Name\"/>\n          </form>\n        }\n        {getSession(sessionId)}\n      </div>\n    );\n}\n\nexport default Session;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Session from './features/Session/Session';\nimport HomePage from './features/HomePage/HomePage';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route path=\"/session/:sessionId\" component={Session}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}